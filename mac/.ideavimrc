Plug 'tpope/vim-surround'
Plug 'machakann/vim-highlightedyank'
Plug 'preservim/nerdtree'

source ~/.vimrc
set multicursor
set sneak
" Must come after sneak
set quickscope
set timeoutlen=100000


imap jk <Esc>
let mapleader = ","
nmap <leader>ne :NERDTree<cr>

" Stop bad habits with arrow keys
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
nnoremap j gj
nnoremap k gk

" Split screen vertically
nnoremap <leader>w <C-w>v<C-w>l
" Split horizontally
nnoremap <leader>q <C-w>s<C-w>l

" IDE implementation flows, glance view, implementation, then interface
nmap <leader>u <Action>(ShowHoverInfo)
nmap <leader>y <Action>(QuickImplementations)
nmap <leader>b <Action>(GotoImplementation)
nmap <leader>g <Action>(GotoSuperMethod)

" Menu helpers
nmap <leader>i <Action>(RefactoringMenu)
nmap <leader>o <Action>(ShowErrorDescription)
nmap <leader>ai <Action>(ShowIntentionActions)

" Switching tabs, use Idea mappings for this instead Ctrl + Shift + < / > or the arrow keys
nmap <leader>[ <Action>(PreviousTab)
nmap <leader>] <Action>(NextTab)

" Relies on TabShifter plugin to be installed, Only changes focus
nmap <C-j> <Action>(TabShiftActions.MoveFocusDown)
nmap <C-h> <Action>(TabShiftActions.MoveFocusLeft)
nmap <C-k> <Action>(TabShiftActions.MoveFocusUp)
nmap <C-l> <Action>(TabShiftActions.MoveFocusRight)

" Git Short cuts
nmap <leader>c <Action>(GitCheckoutFromInputAction)
nmap <leader>b <Action>(GitNewBranchAction)

" AI short cuts
nmap <leader>k <Action>(Vcs.LLMCommitMessageAction)

" Config for Quickscope
let g:qs_accepted_chars = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9']

" TODO: Update these to colors I like in the future
let g:qs_primary_color = '#ff0000'
let g:qs_secondary_color = '#ff00ff'

